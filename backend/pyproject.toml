[project]
name = "storied-life-backend"
version = "0.1.0"
description = "Backend API for Storied Life application"
requires-python = ">=3.11"
dependencies = [
    # FastAPI and ASGI server
    "fastapi==0.104.1",
    "uvicorn[standard]==0.24.0",
    "pydantic==2.5.1",
    "pydantic-settings==2.1.0",
    
    # Database
    "psycopg2-binary==2.9.9",
    "alembic==1.13.1",
    "SQLAlchemy==2.0.23",
    "asyncpg==0.29.0",
    
    # Neo4J
    "neo4j==5.15.0",
    
    # Redis
    "redis==5.0.1",
    "hiredis==2.2.3",
    
    # Authentication and Security
    "python-jose[cryptography]==3.3.0",
    "passlib[bcrypt]==1.7.4",
    "python-multipart==0.0.6",
    "pyjwt[crypto]==2.8.0",
    "cryptography==45.0.5",
    
    # HTTP Client
    "httpx==0.25.2",
    "aiofiles==23.2.1",
    
    # AI and NLP
    "litellm==1.17.9",
    "openai==1.6.1",
    "anthropic==0.8.1",
    
    # Email
    "emails==0.6.0",
    "email-validator==2.1.1",
    
    # File processing
    "python-magic==0.4.27",
    "Pillow==10.1.0",
    
    # Background tasks
    "celery==5.3.4",
    "flower==2.0.1",
    
    # Monitoring and logging
    "sentry-sdk[fastapi]==1.40.0",
    "structlog==23.2.0",
]

[project.optional-dependencies]
dev = [
    # Development tools
    "pre-commit==3.6.0",
    "jupyter==1.0.0",
    "ipython==8.17.2",
    
    # Testing
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "pytest-cov==4.1.0",
    "pytest-xdist==3.5.0",
    "pytest-sugar==0.9.7",
    "pytest-html==4.1.1",
    "pytest-mock==3.12.0",
    "coverage==7.3.2",
    
    # Code quality
    "black==23.11.0",
    "ruff==0.1.6",
    "mypy==1.7.1",
    "isort==5.12.0",
    
    # Security analysis
    "bandit==1.7.5",
    "safety",
    
    # Documentation
    "mkdocs==1.5.3",
    "mkdocs-material==9.4.14",
    "mkdocs-swagger-ui-tag==0.6.8",
    
    # Database tools
    "pgcli==4.0.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.uv]
dev-dependencies = [
    "pre-commit==3.6.0",
    "jupyter==1.0.0",
    "ipython==8.17.2",
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "pytest-cov==4.1.0",
    "pytest-xdist==3.5.0",
    "pytest-sugar==0.9.7",
    "pytest-html==4.1.1",
    "pytest-mock==3.12.0",
    "coverage==7.3.2",
    "black==23.11.0",
    "ruff==0.1.6",
    "mypy==1.7.1",
    "isort==5.12.0",
    "bandit==1.7.5",
    "safety",
    "mkdocs==1.5.3",
    "mkdocs-material==9.4.14",
    "mkdocs-swagger-ui-tag==0.6.8",
    "pgcli==4.0.1",
]

[tool.black]
line-length = 100
target-version = ["py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_calls = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
markers = [
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
    "slow: marks tests as slow",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
